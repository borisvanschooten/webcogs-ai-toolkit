{
	"name": "Ticketing App",
	"description": "Simple demo app for demonstrating WebCogs plugins",
	"version": "0.1",
	"ai_vendor": "openai",
	"ai_model": "o3",
	"system_prompts": [
		{ "file": "../../js/webcogs_core_docs.md" },
		{ "file": "app_docs.md" },
		{ "text": "\n## CSS definitions\n\n", "file": "basestyles.css"},
		{ "text": "\n## SQL table definitions\n\n", "file": "datamodel.sql"}
	],
	"wd": "plugins/",
	"targets": [
		{
			"name": "login",
			"prompts": [ { "text": "Write a plugin that shows a login screen as a modal dialog. It has two fields: username and password, and a button 'login'. When login is pressed, route to 'logged_in' with username and password as parameters. The constructor takes an extra string parameter 'error'. If defined, the error should be shown under the login button." } ],
			"file": "login/plugin.js"
		},
		{
			"name": "mainmenu",
			"prompts": [ { "file": "mainmenu/plugin_docs.md" } ],
			"file": "mainmenu/plugin.js"
		},
		{
			"name": "show_popup",
			"prompts": [ { "text": "Create a modal dialog widget that shows the text passed via the second plugin contructor parameter.  Show an OK button, which routes to hide_popup when clicked." } ],
			"file": "show_popup/plugin.js"
		},
		{
			"name": "useradmin",
			"prompts": [ { "file": "useradmin/plugin_docs.md" } ],
			"file": "useradmin/plugin.js"
		},
		{
			"name": "user_overview",
			"prompts": [ { "file": "user_overview/plugin_docs.md" } ],
			"file": "user_overview/plugin.js"
		},
		{
			"name": "sidebar_tickets",
			"prompts": [ { "text": "Create a widget that shows in the sidebar, showing a vertical list of all tickets assigned to the logged in user's organization and with status=open, descendingly sorted by date. Show ticket number and text, submitted date, the user who submitted the ticket, and the organization it was assigned to, or 'None' if NULL.  If you click on a ticket, route to ticket_overview, with as custom parameter the ticket ID.  " } ],
			"file": "sidebar_tickets/plugin.js"
		},
		{
			"name": "ticketadmin",
			"prompts": [ { "file": "ticketadmin/plugin_docs.md" } ],
			"file": "ticketadmin/plugin.js"
		},
		{
			"name": "submit_ticket",
			"prompts": [ { "text": "Show a form to submit a ticket, with the following fields: text - a wide textarea; assigned_to - a dropdown with as options None (NULL), and each vendor organization.  Show a submit button that creates a new ticket when clicked.  The new ticket has status=open and submitted_by equals the currently logged in user. Route to show_popup with as custom parameter 'Ticket submitted.'." } ],
			"file": "submit_ticket/plugin.js"
		},
		{
			"name": "ticket_overview",
			"prompts": [ { "file": "ticket_overview/plugin_docs.md" } ],
			"file": "ticket_overview/plugin.js"
		},
		{
			"name": "ticket_response",
			"prompts": [ { "text": "Show the fields of a particular ticket, with a large area for the ticket text. The ticket ID is passed as the second parameter of the constructor. All responses to this ticket should be shown below the ticket. Below that, show a form for creating a new response, with the response text in a textarea, the response status in a multiple choice field, and assigned_to as a multiple choice field with as choices '(unchanged)', and the existing vendor organizations.  Statuses can be: '(unchanged)', open, in_progress, fixed, not_fixed. Add a submit button to submit the response. If a response is submitted, add a response record. Only set text if the text is not empty. Only set status and assigned_to if not unchanged.  Also update the ticket record with status and assigned_to if not unchanged. Then route back to ticket_response." } ],
			"file": "ticket_response/plugin.js"
		},
		{
			"name": "ticket_stats",
			"prompts": [ { "text": "Show a bar chart that shows the number of submitted tickets per day over the last 30 days. Show dates in the form mm-dd at the x axis, and ticks on the y axis." } ],
			"file": "ticket_stats/plugin.js"
		}
	]
}
