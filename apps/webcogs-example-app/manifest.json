{
	"name": "Ticketing App",
	"description": "Simple demo app for demonstrating WebCogs plugins",
	"version": "0.1",
	"ai_vendor": "openai",
	"ai_model": "o3",
	"system_prompts": [
		{ "file": "../../js/webcogs_core_docs.md" },
		{ "file": "app_docs.md" },
		{ "text": "\n## CSS definitions\n\n", "file": "basestyles.css"},
		{ "text": "\n## SQL table definitions\n\n", "file": "datamodel.sql"}
	],
	"wd": "plugins/",
	"targets": [
		{
			"name": "login",
			"prompts": [ { "text": "Write a plugin that shows a login screen as a modal dialog. It has two fields: username and password, and a button 'login'. When login is pressed, route to 'logged_in' with username and password as parameters. The constructor takes an extra string parameter 'error'. If defined, the error should be shown under the login button." } ],
			"file": "login/plugin.js"
		},
		{
			"name": "mainmenu",
			"prompts": [ { "file": "mainmenu/plugin_docs.md" } ],
			"file": "mainmenu/plugin.js"
		},
		{
			"name": "useradmin",
			"prompts": [ { "file": "useradmin/plugin_docs.md" } ],
			"file": "useradmin/plugin.js"
		},
		{
			"name": "user_overview",
			"prompts": [ { "file": "user_overview/plugin_docs.md" } ],
			"file": "user_overview/plugin.js"
		},
		{
			"name": "sidebar_tickets",
			"prompts": [ { "text": "Create a widget that shows in the sidebar, showing a vertical list of all tickets with status=open, sorted by date.  If you click on a ticket, route to ticket_overview, with as custom parameter the ticket ID." } ],
			"file": "sidebar_tickets/plugin.js"
		},
		{
			"name": "ticketadmin",
			"prompts": [ { "file": "ticketadmin/plugin_docs.md" } ],
			"file": "ticketadmin/plugin.js"
		},
		{
			"name": "ticket_overview",
			"prompts": [ { "file": "ticket_overview/plugin_docs.md" } ],
			"file": "ticket_overview/plugin.js"
		},
		{
			"name": "ticket_response",
			"prompts": [ { "text": "Show the fields of a particular ticket, with a large area for the ticket text. The ticket ID is passed as the second parameter of the constructor. All responses to this ticket should be shown below the ticket. Below that, show a form for creating a new response, with the response text in a textarea, and the response status in a multiple choice field.  Statuses can be: open, in_progress, fixed, not_fixed. Add a submit button to submit the response. If a response is submitted, use SQL UPDATE to set the response text, status, and date.  Also set the ticket status. Then route to ticket_response." } ],
			"file": "ticket_response/plugin.js"
		},
		{
			"name": "ticket_stats",
			"prompts": [ { "text": "Show a bar chart that shows the number of submitted tickets per day over the last 30 days. Show dates in the form mm-dd at the x axis, and ticks on the y axis." } ],
			"file": "ticket_stats/plugin.js"
		}
	]
}
