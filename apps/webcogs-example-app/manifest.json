{
	"webcogs_buildfile_version": 1,
	"name": "Ticketing App",
	"description": "Simple demo app for demonstrating WebCogs plugins",
	"version": "0.1",
	"ai_vendor": "openai",
	"ai_model": "gpt-5",
	"system_prompts": [
		{ "file": "../../js/webcogs_core_docs.md" },
		{ "file": "app_docs.md" },
		{ "text": "\n## CSS definitions\n\n", "file": "basestyles.css"},
		{ "text": "\n## SQL table definitions\n\n", "file": "datamodel.sql"}
	],
	"wd": "plugins/",
	"targets": [
		{
			"name": "login",
			"prompts": [ { "text": "Write a plugin that shows a login screen as a modal dialog. It has two fields: username and password, and a button 'login'. When login is pressed, route to 'logged_in' with username and password as parameters. The constructor takes two parameters: 'error' and 'language'. If error is defined, the error should be shown under the login button. Below the login button is a language selector, where you can select a language: English (en_us), Dutch (nl_nl), and Italian (it_it).  If language parameter is defined, default to that, otherwise to en_us. When a language is selected, route to set_language with as parameter the language code. Below that is a signup button, which routes to signup." } ],
			"file": "login/plugin.js"
		},
		{
			"name": "signup",
			"prompts": [ { "text": "Write a plugin that shows a signup form as a modal dialog. The form has the following fields: username, email, first_name, surname, and a dropdown for selecting organization and role (user or developer). A submit button routes to signed_up, with as custom parameter an object with the fields in it.  A cancel button should route back to login.  The constructor takes an extra string parameter 'error'. If defined, the error should be shown under the signup button. You have no access to core.db, so use core.getOrganizations instead." } ],
			"file": "signup/plugin.js"
		},
		{
			"name": "mainmenu",
			"prompts": [ { "file": "mainmenu/plugin_docs.md" } ],
			"file": "mainmenu/plugin.js"
		},
		{
			"name": "show_popup",
			"prompts": [ { "text": "Create a modal dialog widget that shows the text passed via the second plugin contructor parameter.  Show an OK button, which routes to hide_popup when clicked." } ],
			"file": "show_popup/plugin.js"
		},
		{
			"name": "useradmin",
			"prompts": [ { "file": "useradmin/plugin_docs.md" } ],
			"file": "useradmin/plugin.js"
		},
		{
			"name": "user_overview",
			"prompts": [ { "file": "user_overview/plugin_docs.md" } ],
			"file": "user_overview/plugin.js"
		},
		{
			"name": "user_profile",
			"prompts": [ { "text": "Create a widget that has a view mode and an edit mode, set via a constructor custom boolean parameter 'edit_mode'. In view mode, show the currently logged in user record in a table with two columns, keys left and values right, and show an edit button. which routes to user_profile with edit_mode=true.  In edit mode, show a form where you can edit email, first_name, surname, a dropdown showing organization names for selecting the organization_id, and a dropdown for selecting role (user, developer).  A submit button updates the filled-in user fields and routes to user_profile. A cancel button returns to view mode." } ],
			"file": "user_profile/plugin.js"
		},
		{
			"name": "sidebar_tickets",
			"prompts": [ { "text": "Create a sidebar widget that shows two vertical lists of tickets, descendingly sorted by date. Show ticket number and text, submitted date, the user who submitted the ticket, and the organization it was assigned to, or 'None' if NULL.  If you click on a ticket, route to ticket_overview, with as custom parameter the ticket ID.  The first list shows all tickets assigned to the logged in user's organization. The second list shows all tickets submitted by the logged in user.  Both lists should show only tickets with status=open or status=in_progress." } ],
			"file": "sidebar_tickets/plugin.js"
		},
		{
			"name": "ticketadmin",
			"prompts": [ { "file": "ticketadmin/plugin_docs.md" } ],
			"file": "ticketadmin/plugin.js"
		},
		{
			"name": "submit_ticket",
			"prompts": [ { "text": "Show a form to submit a ticket, with the following fields: text - a wide textarea; assigned_to - a dropdown with as options None (NULL), and each vendor organization.  Show a submit button that creates a new ticket when clicked.  The new ticket has status=open and submitted_by equals the currently logged in user. Route to show_popup with as custom parameter 'Ticket submitted.'." } ],
			"file": "submit_ticket/plugin.js"
		},
		{
			"name": "ticket_overview",
			"prompts": [ { "file": "ticket_overview/plugin_docs.md" } ],
			"file": "ticket_overview/plugin.js"
		},
		{
			"name": "ticket_response",
			"prompts": [ { "text": "Show the fields of a particular ticket, with a large area for the ticket text. The ticket ID is passed as the second parameter of the constructor. All responses to this ticket should be shown below the ticket. Below that, show a form for creating a new response, with the response text in a textarea, the response status in a multiple choice field, and assigned_to as a multiple choice field with as choices '(unchanged)', and the existing vendor organizations.  Statuses can be: '(unchanged)', open, in_progress, fixed, not_fixed. Add a submit button to submit the response. If a response is submitted, add a response record with submitted_by set to the logged in user. Only set text if the text is not empty. Only set status and assigned_to if not unchanged.  Also update the ticket record with status and assigned_to if not unchanged. Then route back to ticket_response." } ],
			"file": "ticket_response/plugin.js"
		},
		{
			"name": "ticket_stats",
			"prompts": [ { "text": "Show the total number of tickets subdivided by status and assigned organization in a table. If you click on a status column header, route to ticketadmin with as parameter the status.  Below that, show a stacked bar chart that shows the number of submitted tickets and the number of responses per day over the last 30 days. Show every other date in the form mm-dd at the x axis, and ticks on the y axis. Also show a legend." } ],
			"file": "ticket_stats/plugin.js"
		}
	]
}
